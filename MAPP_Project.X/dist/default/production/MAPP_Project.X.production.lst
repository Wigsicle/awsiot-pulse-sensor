

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Aug 19 13:37:06 2021

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           	psect	idataCOMRAM
    26  007A8E                     __pidataCOMRAM:
    27                           	opt stack 0
    28                           
    29                           ;initializer for _MessageP
    30  007A8E  50                 	db	80
    31  007A8F  65                 	db	101
    32  007A90  72                 	db	114
    33  007A91  6D                 	db	109
    34  007A92  69                 	db	105
    35  007A93  73                 	db	115
    36  007A94  73                 	db	115
    37  007A95  69                 	db	105
    38  007A96  6F                 	db	111
    39  007A97  6E                 	db	110
    40  007A98  20                 	db	32
    41  007A99  47                 	db	71
    42  007A9A  72                 	db	114
    43  007A9B  61                 	db	97
    44  007A9C  6E                 	db	110
    45  007A9D  74                 	db	116
    46  007A9E  65                 	db	101
    47  007A9F  64                 	db	100
    48  007AA0  00                 	db	0
    49                           
    50                           ;initializer for _MessageD
    51  007AA1  50                 	db	80
    52  007AA2  65                 	db	101
    53  007AA3  72                 	db	114
    54  007AA4  6D                 	db	109
    55  007AA5  69                 	db	105
    56  007AA6  73                 	db	115
    57  007AA7  73                 	db	115
    58  007AA8  69                 	db	105
    59  007AA9  6F                 	db	111
    60  007AAA  6E                 	db	110
    61  007AAB  20                 	db	32
    62  007AAC  44                 	db	68
    63  007AAD  65                 	db	101
    64  007AAE  6E                 	db	110
    65  007AAF  69                 	db	105
    66  007AB0  65                 	db	101
    67  007AB1  64                 	db	100
    68  007AB2  00                 	db	0
    69                           
    70                           ;initializer for _MessageR
    71  007AB3  43                 	db	67
    72  007AB4  6C                 	db	108
    73  007AB5  6F                 	db	111
    74  007AB6  73                 	db	115
    75  007AB7  69                 	db	105
    76  007AB8  6E                 	db	110
    77  007AB9  67                 	db	103
    78  007ABA  20                 	db	32
    79  007ABB  44                 	db	68
    80  007ABC  6F                 	db	111
    81  007ABD  6F                 	db	111
    82  007ABE  72                 	db	114
    83  007ABF  00                 	db	0
    84  0000                     _ADCON1	set	4033
    85  0000                     _PORTAbits	set	3968
    86  0000                     _PORTBbits	set	3969
    87  0000                     _PORTCbits	set	3970
    88  0000                     _PORTD	set	3971
    89  0000                     _PORTDbits	set	3971
    90  0000                     _TRISA	set	3986
    91  0000                     _TRISBbits	set	3987
    92  0000                     _TRISC	set	3988
    93  0000                     _TRISCbits	set	3988
    94  0000                     _TRISD	set	3989
    95                           
    96                           ; #config settings
    97                           
    98                           	psect	cinit
    99  007A66                     __pcinit:
   100                           	opt stack 0
   101  007A66                     start_initialization:
   102                           	opt stack 0
   103  007A66                     __initialization:
   104                           	opt stack 0
   105                           
   106                           ; Clear objects allocated to COMRAM (1 bytes)
   107  007A66  6A47               	clrf	__pbssCOMRAM& (0+255),c
   108                           
   109                           ; Initialize objects allocated to COMRAM (50 bytes)
   110                           ; load TBLPTR registers with __pidataCOMRAM
   111  007A68  0E8E               	movlw	low __pidataCOMRAM
   112  007A6A  6EF6               	movwf	tblptrl,c
   113  007A6C  0E7A               	movlw	high __pidataCOMRAM
   114  007A6E  6EF7               	movwf	tblptrh,c
   115  007A70  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   116  007A72  6EF8               	movwf	tblptru,c
   117  007A74  EE00  F001         	lfsr	0,__pdataCOMRAM
   118  007A78  EE10 F032          	lfsr	1,50
   119  007A7C                     copy_data0:
   120  007A7C  0009               	tblrd		*+
   121  007A7E  CFF5 FFEE          	movff	tablat,postinc0
   122  007A82  50E5               	movf	postdec1,w,c
   123  007A84  50E1               	movf	fsr1l,w,c
   124  007A86  E1FA               	bnz	copy_data0
   125  007A88                     end_of_initialization:
   126                           	opt stack 0
   127  007A88                     __end_of__initialization:
   128                           	opt stack 0
   129  007A88  0100               	movlb	0
   130  007A8A  EF61  F03F         	goto	_main	;jump to C main() function
   131                           tblptru	equ	0xFF8
   132                           tblptrh	equ	0xFF7
   133                           tblptrl	equ	0xFF6
   134                           tablat	equ	0xFF5
   135                           postinc0	equ	0xFEE
   136                           postdec1	equ	0xFE5
   137                           fsr1l	equ	0xFE1
   138                           
   139                           	psect	bssCOMRAM
   140  000047                     __pbssCOMRAM:
   141                           	opt stack 0
   142  000047                     _outchar:
   143                           	opt stack 0
   144  000047                     	ds	1
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	dataCOMRAM
   154  000001                     __pdataCOMRAM:
   155                           	opt stack 0
   156  000001                     _MessageP:
   157                           	opt stack 0
   158  000001                     	ds	19
   159  000014                     _MessageD:
   160                           	opt stack 0
   161  000014                     	ds	18
   162  000026                     _MessageR:
   163                           	opt stack 0
   164  000026                     	ds	13
   165                           tblptru	equ	0xFF8
   166                           tblptrh	equ	0xFF7
   167                           tblptrl	equ	0xFF6
   168                           tablat	equ	0xFF5
   169                           postinc0	equ	0xFEE
   170                           postdec1	equ	0xFE5
   171                           fsr1l	equ	0xFE1
   172                           
   173                           	psect	cstackCOMRAM
   174  000033                     __pcstackCOMRAM:
   175                           	opt stack 0
   176  000033                     ??_lcd_strobe:
   177  000033                     ?___lwdiv:
   178                           	opt stack 0
   179  000033                     delay_ms@i:
   180                           	opt stack 0
   181  000033                     ___lwdiv@dividend:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x0
   185  000033                     	ds	1
   186  000034                     ??_lcd_write_cmd:
   187  000034                     ??_lcd_write_data:
   188                           
   189                           ; 0 bytes @ 0x1
   190  000034                     	ds	1
   191  000035                     ??_delay_ms:
   192  000035                     lcd_write_cmd@cmd:
   193                           	opt stack 0
   194  000035                     lcd_write_data@data:
   195                           	opt stack 0
   196  000035                     ___lwdiv@divisor:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x2
   200  000035                     	ds	1
   201  000036                     lcd_write_cmd@temp2:
   202                           	opt stack 0
   203  000036                     lcd_write_data@temp1:
   204                           	opt stack 0
   205  000036                     delay_ms@j:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x3
   209  000036                     	ds	1
   210  000037                     ??_lcd_init:
   211  000037                     ___lwdiv@quotient:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x4
   215  000037                     	ds	1
   216  000038                     Rotation180@i:
   217                           	opt stack 0
   218  000038                     returnServo@i:
   219                           	opt stack 0
   220  000038                     lcd_init@i:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x5
   224  000038                     	ds	1
   225  000039                     ___lwdiv@counter:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x6
   229  000039                     	ds	1
   230  00003A                     delay_us@i:
   231                           	opt stack 0
   232                           
   233                           ; 2 bytes @ 0x7
   234  00003A                     	ds	2
   235  00003C                     delay_us@j:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x9
   239  00003C                     	ds	2
   240  00003E                     delay_us@lower:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0xB
   244  00003E                     	ds	2
   245  000040                     ??_onetone:
   246  000040                     ??_secondtone:
   247                           
   248                           ; 0 bytes @ 0xD
   249  000040                     	ds	1
   250  000041                     onetone@k:
   251                           	opt stack 0
   252  000041                     secondtone@k:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0xE
   256  000041                     	ds	2
   257  000043                     main@j:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x10
   261  000043                     	ds	2
   262  000045                     main@i:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x12
   266  000045                     	ds	2
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           postdec1	equ	0xFE5
   273                           fsr1l	equ	0xFE1
   274                           
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 71 in file "main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  i               2   18[COMRAM] int 
   285 ;;  j               2   16[COMRAM] int 
   286 ;; Return value:  Size  Location     Type
   287 ;;		None               void
   288 ;; Registers used:
   289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   295 ;;      Params:         0       0       0       0       0       0       0       0       0
   296 ;;      Locals:         4       0       0       0       0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0       0       0       0       0
   298 ;;      Totals:         4       0       0       0       0       0       0       0       0
   299 ;;Total ram usage:        4 bytes
   300 ;; Hardware stack levels required when called:    3
   301 ;; This function calls:
   302 ;;		_Rotation180
   303 ;;		_delay_ms
   304 ;;		_delay_us
   305 ;;		_lcd_init
   306 ;;		_lcd_write_cmd
   307 ;;		_lcd_write_data
   308 ;;		_onetone
   309 ;;		_returnServo
   310 ;;		_secondtone
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text0
   317  007EC2                     __ptext0:
   318                           	opt stack 0
   319  007EC2                     _main:
   320                           	opt stack 28
   321                           
   322                           ;main.c: 72: ADCON1 = 0x0F;
   323                           
   324                           ;incstack = 0
   325  007EC2  0E0F               	movlw	15
   326  007EC4  6EC1               	movwf	4033,c	;volatile
   327                           
   328                           ;main.c: 73: TRISA = 0x00;
   329  007EC6  0E00               	movlw	0
   330  007EC8  6E92               	movwf	3986,c	;volatile
   331                           
   332                           ;main.c: 74: PORTAbits.RA0 = 0;
   333  007ECA  9080               	bcf	3968,0,c	;volatile
   334                           
   335                           ;main.c: 75: PORTAbits.RA1 = 0;
   336  007ECC  9280               	bcf	3968,1,c	;volatile
   337                           
   338                           ;main.c: 76: TRISC = 0xFF;
   339  007ECE  6894               	setf	3988,c	;volatile
   340                           
   341                           ;main.c: 77: TRISBbits.TRISB0 = 0;
   342  007ED0  9093               	bcf	3987,0,c	;volatile
   343                           
   344                           ;main.c: 78: TRISCbits.RC2 = 0;
   345  007ED2  9494               	bcf	3988,2,c	;volatile
   346                           
   347                           ;main.c: 79: int i;
   348                           ;main.c: 80: int j;
   349                           ;main.c: 81: lcd_init();
   350  007ED4  EC30  F03E         	call	_lcd_init	;wreg free
   351                           
   352                           ;main.c: 85: while(PORTCbits.RC0 == 1) {
   353  007ED8  D059               	goto	l82
   354  007EDA                     l83:
   355                           
   356                           ;main.c: 86: PORTAbits.RA0 = 1;
   357  007EDA  8080               	bsf	3968,0,c	;volatile
   358                           
   359                           ;main.c: 87: PORTAbits.RA1 = 0;
   360  007EDC  9280               	bcf	3968,1,c	;volatile
   361                           
   362                           ;main.c: 88: onetone();
   363  007EDE  ECB0  F03D         	call	_onetone	;wreg free
   364                           
   365                           ;main.c: 89: lcd_write_cmd(0x01);
   366  007EE2  0E01               	movlw	1
   367  007EE4  ECF8  F03D         	call	_lcd_write_cmd
   368                           
   369                           ;main.c: 90: lcd_write_cmd(0x80);
   370  007EE8  0E80               	movlw	128
   371  007EEA  ECF8  F03D         	call	_lcd_write_cmd
   372                           
   373                           ;main.c: 91: for(i=0; i<18; i++){
   374  007EEE  0E00               	movlw	0
   375  007EF0  6E46               	movwf	main@i+1,c
   376  007EF2  0E00               	movlw	0
   377  007EF4  6E45               	movwf	main@i,c
   378  007EF6                     l1180:
   379  007EF6  BE46               	btfsc	main@i+1,7,c
   380  007EF8  D006               	goto	l1184
   381  007EFA  5046               	movf	main@i+1,w,c
   382  007EFC  E112               	bnz	l1192
   383  007EFE  0E12               	movlw	18
   384  007F00  5C45               	subwf	main@i,w,c
   385  007F02  B0D8               	btfsc	status,0,c
   386  007F04  D00E               	goto	l1192
   387  007F06                     l1184:
   388                           
   389                           ;main.c: 92: outchar=MessageP[i];
   390  007F06  0E01               	movlw	low _MessageP
   391  007F08  2445               	addwf	main@i,w,c
   392  007F0A  6ED9               	movwf	fsr2l,c
   393  007F0C  0E00               	movlw	high _MessageP
   394  007F0E  2046               	addwfc	main@i+1,w,c
   395  007F10  6EDA               	movwf	fsr2h,c
   396  007F12  50DF               	movf	indf2,w,c
   397  007F14  6E47               	movwf	_outchar,c
   398                           
   399                           ;main.c: 93: lcd_write_data(outchar);
   400  007F16  5047               	movf	_outchar,w,c
   401  007F18  ECA6  F03E         	call	_lcd_write_data
   402  007F1C  4A45               	infsnz	main@i,f,c
   403  007F1E  2A46               	incf	main@i+1,f,c
   404  007F20  D7EA               	goto	l1180
   405  007F22                     l1192:
   406                           
   407                           ;main.c: 94: }
   408                           ;main.c: 95: Rotation180();
   409  007F22  EC94  F03D         	call	_Rotation180	;wreg free
   410                           
   411                           ;main.c: 96: delay_ms(5000);
   412  007F26  0E13               	movlw	19
   413  007F28  6E34               	movwf	delay_ms@i+1,c
   414  007F2A  0E88               	movlw	136
   415  007F2C  6E33               	movwf	delay_ms@i,c
   416  007F2E  EC60  F03D         	call	_delay_ms	;wreg free
   417                           
   418                           ;main.c: 97: lcd_write_cmd(0x01);
   419  007F32  0E01               	movlw	1
   420  007F34  ECF8  F03D         	call	_lcd_write_cmd
   421                           
   422                           ;main.c: 98: lcd_write_cmd(0x80);
   423  007F38  0E80               	movlw	128
   424  007F3A  ECF8  F03D         	call	_lcd_write_cmd
   425                           
   426                           ;main.c: 99: for(i=0; i<12; i++){
   427  007F3E  0E00               	movlw	0
   428  007F40  6E46               	movwf	main@i+1,c
   429  007F42  0E00               	movlw	0
   430  007F44  6E45               	movwf	main@i,c
   431  007F46                     l1196:
   432  007F46  BE46               	btfsc	main@i+1,7,c
   433  007F48  D006               	goto	l1200
   434  007F4A  5046               	movf	main@i+1,w,c
   435  007F4C  E112               	bnz	l1208
   436  007F4E  0E0C               	movlw	12
   437  007F50  5C45               	subwf	main@i,w,c
   438  007F52  B0D8               	btfsc	status,0,c
   439  007F54  D00E               	goto	l1208
   440  007F56                     l1200:
   441                           
   442                           ;main.c: 100: outchar=MessageR[i];
   443  007F56  0E26               	movlw	low _MessageR
   444  007F58  2445               	addwf	main@i,w,c
   445  007F5A  6ED9               	movwf	fsr2l,c
   446  007F5C  0E00               	movlw	high _MessageR
   447  007F5E  2046               	addwfc	main@i+1,w,c
   448  007F60  6EDA               	movwf	fsr2h,c
   449  007F62  50DF               	movf	indf2,w,c
   450  007F64  6E47               	movwf	_outchar,c
   451                           
   452                           ;main.c: 101: lcd_write_data(outchar);
   453  007F66  5047               	movf	_outchar,w,c
   454  007F68  ECA6  F03E         	call	_lcd_write_data
   455  007F6C  4A45               	infsnz	main@i,f,c
   456  007F6E  2A46               	incf	main@i+1,f,c
   457  007F70  D7EA               	goto	l1196
   458  007F72                     l1208:
   459                           
   460                           ;main.c: 102: }
   461                           ;main.c: 103: secondtone();
   462  007F72  ECF0  F03E         	call	_secondtone	;wreg free
   463                           
   464                           ;main.c: 104: returnServo();
   465  007F76  EC7A  F03D         	call	_returnServo	;wreg free
   466                           
   467                           ;main.c: 105: lcd_write_cmd(0x01);
   468  007F7A  0E01               	movlw	1
   469  007F7C  ECF8  F03D         	call	_lcd_write_cmd
   470                           
   471                           ;main.c: 106: lcd_write_cmd(0x80);
   472  007F80  0E80               	movlw	128
   473  007F82  ECF8  F03D         	call	_lcd_write_cmd
   474                           
   475                           ;main.c: 107: PORTAbits.RA0 = 0;
   476  007F86  9080               	bcf	3968,0,c	;volatile
   477  007F88                     l88:
   478  007F88  B082               	btfsc	3970,0,c	;volatile
   479  007F8A  D7FE               	goto	l88
   480  007F8C                     l82:
   481  007F8C  A082               	btfss	3970,0,c	;volatile
   482  007F8E  D034               	goto	l92
   483  007F90  D7A4               	goto	l83
   484  007F92                     l93:
   485                           
   486                           ;main.c: 114: PORTAbits.RA1 = 1;
   487  007F92  8280               	bsf	3968,1,c	;volatile
   488                           
   489                           ;main.c: 115: PORTAbits.RA0 = 0;
   490  007F94  9080               	bcf	3968,0,c	;volatile
   491                           
   492                           ;main.c: 116: onetone();
   493  007F96  ECB0  F03D         	call	_onetone	;wreg free
   494                           
   495                           ;main.c: 117: delay_us(3000);
   496  007F9A  0E0B               	movlw	11
   497  007F9C  6E3B               	movwf	delay_us@i+1,c
   498  007F9E  0EB8               	movlw	184
   499  007FA0  6E3A               	movwf	delay_us@i,c
   500  007FA2  EC69  F03E         	call	_delay_us	;wreg free
   501                           
   502                           ;main.c: 118: onetone();
   503  007FA6  ECB0  F03D         	call	_onetone	;wreg free
   504                           
   505                           ;main.c: 119: lcd_write_cmd(0x01);
   506  007FAA  0E01               	movlw	1
   507  007FAC  ECF8  F03D         	call	_lcd_write_cmd
   508                           
   509                           ;main.c: 120: lcd_write_cmd(0x80);
   510  007FB0  0E80               	movlw	128
   511  007FB2  ECF8  F03D         	call	_lcd_write_cmd
   512                           
   513                           ;main.c: 121: for(j=0; j<17; j++){
   514  007FB6  0E00               	movlw	0
   515  007FB8  6E44               	movwf	main@j+1,c
   516  007FBA  0E00               	movlw	0
   517  007FBC  6E43               	movwf	main@j,c
   518  007FBE  BE44               	btfsc	main@j+1,7,c
   519  007FC0  D006               	goto	l1220
   520  007FC2  5044               	movf	main@j+1,w,c
   521  007FC4  E116               	bnz	l95
   522  007FC6  0E11               	movlw	17
   523  007FC8  5C43               	subwf	main@j,w,c
   524  007FCA  B0D8               	btfsc	status,0,c
   525  007FCC  D012               	goto	l95
   526  007FCE                     l1220:
   527                           
   528                           ;main.c: 122: outchar=MessageD[j];
   529  007FCE  0E14               	movlw	low _MessageD
   530  007FD0  2443               	addwf	main@j,w,c
   531  007FD2  6ED9               	movwf	fsr2l,c
   532  007FD4  0E00               	movlw	high _MessageD
   533  007FD6  2044               	addwfc	main@j+1,w,c
   534  007FD8  6EDA               	movwf	fsr2h,c
   535  007FDA  50DF               	movf	indf2,w,c
   536  007FDC  6E47               	movwf	_outchar,c
   537                           
   538                           ;main.c: 123: lcd_write_data(outchar);
   539  007FDE  5047               	movf	_outchar,w,c
   540  007FE0  ECA6  F03E         	call	_lcd_write_data
   541  007FE4  4A43               	infsnz	main@j,f,c
   542  007FE6  2A44               	incf	main@j+1,f,c
   543  007FE8  BE44               	btfsc	main@j+1,7,c
   544  007FEA  D7F1               	goto	l1220
   545  007FEC  5044               	movf	main@j+1,w,c
   546  007FEE  E101               	bnz	u780
   547  007FF0  D7EA               	goto	L1
   548  007FF2                     u780:
   549  007FF2                     l95:
   550                           
   551                           ;main.c: 124: }
   552                           ;main.c: 125: PORTAbits.RA1 = 0;
   553  007FF2  9280               	bcf	3968,1,c	;volatile
   554  007FF4                     l96:
   555  007FF4  B282               	btfsc	3970,1,c	;volatile
   556  007FF6  D7FE               	goto	l96
   557  007FF8                     l92:
   558  007FF8  A282               	btfss	3970,1,c	;volatile
   559  007FFA  EF00  F008         	goto	start
   560  007FFE  D7C9               	goto	l93
   561  008000                     __end_of_main:
   562                           	opt stack 0
   563                           tblptru	equ	0xFF8
   564                           tblptrh	equ	0xFF7
   565                           tblptrl	equ	0xFF6
   566                           tablat	equ	0xFF5
   567                           postinc0	equ	0xFEE
   568                           postdec1	equ	0xFE5
   569                           fsr1l	equ	0xFE1
   570                           indf2	equ	0xFDF
   571                           fsr2h	equ	0xFDA
   572                           fsr2l	equ	0xFD9
   573                           status	equ	0xFD8
   574                           
   575 ;; *************** function _secondtone *****************
   576 ;; Defined at:
   577 ;;		line 44 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  k               2   14[COMRAM] unsigned int 
   582 ;; Return value:  Size  Location     Type
   583 ;;		None               void
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   591 ;;      Params:         0       0       0       0       0       0       0       0       0
   592 ;;      Locals:         2       0       0       0       0       0       0       0       0
   593 ;;      Temps:          1       0       0       0       0       0       0       0       0
   594 ;;      Totals:         3       0       0       0       0       0       0       0       0
   595 ;;Total ram usage:        3 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    2
   598 ;; This function calls:
   599 ;;		_delay_ms
   600 ;;		_delay_us
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text1
   607  007DE0                     __ptext1:
   608                           	opt stack 0
   609  007DE0                     _secondtone:
   610                           	opt stack 28
   611                           
   612                           ;main.c: 46: unsigned int k;
   613                           ;main.c: 47: PORTAbits.RA0 = 0;
   614                           
   615                           ;incstack = 0
   616  007DE0  9080               	bcf	3968,0,c	;volatile
   617                           
   618                           ;main.c: 48: for(k=0;k<20;k++){
   619  007DE2  0E00               	movlw	0
   620  007DE4  6E42               	movwf	secondtone@k+1,c
   621  007DE6  0E00               	movlw	0
   622  007DE8  6E41               	movwf	secondtone@k,c
   623  007DEA  5042               	movf	secondtone@k+1,w,c
   624  007DEC  E11A               	bnz	l66
   625  007DEE  0E14               	movlw	20
   626  007DF0  5C41               	subwf	secondtone@k,w,c
   627  007DF2  B0D8               	btfsc	status,0,c
   628  007DF4  D016               	goto	l66
   629                           
   630                           ;main.c: 49: delay_us(5000);
   631  007DF6  0E13               	movlw	19
   632  007DF8  6E3B               	movwf	delay_us@i+1,c
   633  007DFA  0E88               	movlw	136
   634  007DFC  6E3A               	movwf	delay_us@i,c
   635  007DFE  EC69  F03E         	call	_delay_us	;wreg free
   636                           
   637                           ;main.c: 50: PORTBbits.RB0 = !PORTBbits.RB0;
   638  007E02  B081               	btfsc	3969,0,c	;volatile
   639  007E04  D003               	goto	u600
   640  007E06  6A40               	clrf	??_secondtone& (0+255),c
   641  007E08  2A40               	incf	??_secondtone& (0+255),f,c
   642  007E0A  D001               	goto	u618
   643  007E0C                     u600:
   644  007E0C  6A40               	clrf	??_secondtone& (0+255),c
   645  007E0E                     u618:
   646  007E0E  5081               	movf	3969,w,c	;volatile
   647  007E10  1840               	xorwf	??_secondtone,w,c
   648  007E12  0BFE               	andlw	-2
   649  007E14  1840               	xorwf	??_secondtone,w,c
   650  007E16  6E81               	movwf	3969,c	;volatile
   651  007E18  4A41               	infsnz	secondtone@k,f,c
   652  007E1A  2A42               	incf	secondtone@k+1,f,c
   653  007E1C  5042               	movf	secondtone@k+1,w,c
   654  007E1E  E101               	bnz	u620
   655  007E20  D7E6               	goto	L2
   656  007E22                     u620:
   657  007E22                     l66:
   658                           
   659                           ;main.c: 51: }
   660                           ;main.c: 52: PORTAbits.RA0 = 1;
   661  007E22  8080               	bsf	3968,0,c	;volatile
   662                           
   663                           ;main.c: 53: delay_ms(500);
   664  007E24  0E01               	movlw	1
   665  007E26  6E34               	movwf	delay_ms@i+1,c
   666  007E28  0EF4               	movlw	244
   667  007E2A  6E33               	movwf	delay_ms@i,c
   668  007E2C  EC60  F03D         	call	_delay_ms	;wreg free
   669                           
   670                           ;main.c: 54: for(k=0;k<20;k++){
   671  007E30  0E00               	movlw	0
   672  007E32  6E42               	movwf	secondtone@k+1,c
   673  007E34  0E00               	movlw	0
   674  007E36  6E41               	movwf	secondtone@k,c
   675  007E38  5042               	movf	secondtone@k+1,w,c
   676  007E3A  E11A               	bnz	l68
   677  007E3C  0E14               	movlw	20
   678  007E3E  5C41               	subwf	secondtone@k,w,c
   679  007E40  B0D8               	btfsc	status,0,c
   680  007E42  D016               	goto	l68
   681                           
   682                           ;main.c: 55: delay_us(5000);
   683  007E44  0E13               	movlw	19
   684  007E46  6E3B               	movwf	delay_us@i+1,c
   685  007E48  0E88               	movlw	136
   686  007E4A  6E3A               	movwf	delay_us@i,c
   687  007E4C  EC69  F03E         	call	_delay_us	;wreg free
   688                           
   689                           ;main.c: 56: PORTBbits.RB0 = !PORTBbits.RB0;
   690  007E50  B081               	btfsc	3969,0,c	;volatile
   691  007E52  D003               	goto	u640
   692  007E54  6A40               	clrf	??_secondtone& (0+255),c
   693  007E56  2A40               	incf	??_secondtone& (0+255),f,c
   694  007E58  D001               	goto	u658
   695  007E5A                     u640:
   696  007E5A  6A40               	clrf	??_secondtone& (0+255),c
   697  007E5C                     u658:
   698  007E5C  5081               	movf	3969,w,c	;volatile
   699  007E5E  1840               	xorwf	??_secondtone,w,c
   700  007E60  0BFE               	andlw	-2
   701  007E62  1840               	xorwf	??_secondtone,w,c
   702  007E64  6E81               	movwf	3969,c	;volatile
   703  007E66  4A41               	infsnz	secondtone@k,f,c
   704  007E68  2A42               	incf	secondtone@k+1,f,c
   705  007E6A  5042               	movf	secondtone@k+1,w,c
   706  007E6C  E101               	bnz	u660
   707  007E6E  D7E6               	goto	L3
   708  007E70                     u660:
   709  007E70                     l68:
   710                           
   711                           ;main.c: 57: }
   712                           ;main.c: 58: PORTAbits.RA0 = 0;
   713  007E70  9080               	bcf	3968,0,c	;volatile
   714                           
   715                           ;main.c: 59: delay_ms(500);
   716  007E72  0E01               	movlw	1
   717  007E74  6E34               	movwf	delay_ms@i+1,c
   718  007E76  0EF4               	movlw	244
   719  007E78  6E33               	movwf	delay_ms@i,c
   720  007E7A  EC60  F03D         	call	_delay_ms	;wreg free
   721                           
   722                           ;main.c: 60: for(k=0;k<20;k++){
   723  007E7E  0E00               	movlw	0
   724  007E80  6E42               	movwf	secondtone@k+1,c
   725  007E82  0E00               	movlw	0
   726  007E84  6E41               	movwf	secondtone@k,c
   727  007E86  5042               	movf	secondtone@k+1,w,c
   728  007E88  E11A               	bnz	l70
   729  007E8A  0E14               	movlw	20
   730  007E8C  5C41               	subwf	secondtone@k,w,c
   731  007E8E  B0D8               	btfsc	status,0,c
   732  007E90  D016               	goto	l70
   733                           
   734                           ;main.c: 61: delay_us(5000);
   735  007E92  0E13               	movlw	19
   736  007E94  6E3B               	movwf	delay_us@i+1,c
   737  007E96  0E88               	movlw	136
   738  007E98  6E3A               	movwf	delay_us@i,c
   739  007E9A  EC69  F03E         	call	_delay_us	;wreg free
   740                           
   741                           ;main.c: 62: PORTBbits.RB0 = !PORTBbits.RB0;
   742  007E9E  B081               	btfsc	3969,0,c	;volatile
   743  007EA0  D003               	goto	u680
   744  007EA2  6A40               	clrf	??_secondtone& (0+255),c
   745  007EA4  2A40               	incf	??_secondtone& (0+255),f,c
   746  007EA6  D001               	goto	u698
   747  007EA8                     u680:
   748  007EA8  6A40               	clrf	??_secondtone& (0+255),c
   749  007EAA                     u698:
   750  007EAA  5081               	movf	3969,w,c	;volatile
   751  007EAC  1840               	xorwf	??_secondtone,w,c
   752  007EAE  0BFE               	andlw	-2
   753  007EB0  1840               	xorwf	??_secondtone,w,c
   754  007EB2  6E81               	movwf	3969,c	;volatile
   755  007EB4  4A41               	infsnz	secondtone@k,f,c
   756  007EB6  2A42               	incf	secondtone@k+1,f,c
   757  007EB8  5042               	movf	secondtone@k+1,w,c
   758  007EBA  E101               	bnz	u700
   759  007EBC  D7E6               	goto	L4
   760  007EBE                     u700:
   761  007EBE                     l70:
   762                           
   763                           ;main.c: 63: }
   764                           ;main.c: 64: PORTAbits.RA0 = 1;
   765  007EBE  8080               	bsf	3968,0,c	;volatile
   766  007EC0  0012               	return		;funcret
   767  007EC2                     __end_of_secondtone:
   768                           	opt stack 0
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           postinc0	equ	0xFEE
   774                           postdec1	equ	0xFE5
   775                           fsr1l	equ	0xFE1
   776                           indf2	equ	0xFDF
   777                           fsr2h	equ	0xFDA
   778                           fsr2l	equ	0xFD9
   779                           status	equ	0xFD8
   780                           
   781 ;; *************** function _returnServo *****************
   782 ;; Defined at:
   783 ;;		line 23 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  i               2    5[COMRAM] unsigned int 
   788 ;; Return value:  Size  Location     Type
   789 ;;		None               void
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   797 ;;      Params:         0       0       0       0       0       0       0       0       0
   798 ;;      Locals:         2       0       0       0       0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0
   800 ;;      Totals:         2       0       0       0       0       0       0       0       0
   801 ;;Total ram usage:        2 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    1
   804 ;; This function calls:
   805 ;;		_delay_ms
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text2
   812  007AF4                     __ptext2:
   813                           	opt stack 0
   814  007AF4                     _returnServo:
   815                           	opt stack 29
   816                           
   817                           ;main.c: 24: unsigned int i;
   818                           ;main.c: 25: for(i=12;i>0;i--){
   819                           
   820                           ;incstack = 0
   821  007AF4  0E00               	movlw	0
   822  007AF6  6E39               	movwf	returnServo@i+1,c
   823  007AF8  0E0C               	movlw	12
   824  007AFA  6E38               	movwf	returnServo@i,c
   825  007AFC                     l1088:
   826  007AFC  5038               	movf	returnServo@i,w,c
   827  007AFE  1039               	iorwf	returnServo@i+1,w,c
   828  007B00  B4D8               	btfsc	status,2,c
   829  007B02  0012               	return	
   830                           
   831                           ;main.c: 26: PORTCbits.RC2 =1;
   832  007B04  8482               	bsf	3970,2,c	;volatile
   833                           
   834                           ;main.c: 27: delay_ms(2.25);
   835  007B06  0E00               	movlw	0
   836  007B08  6E34               	movwf	delay_ms@i+1,c
   837  007B0A  0E02               	movlw	2
   838  007B0C  6E33               	movwf	delay_ms@i,c
   839  007B0E  EC60  F03D         	call	_delay_ms	;wreg free
   840                           
   841                           ;main.c: 28: PORTCbits.RC2=0;
   842  007B12  9482               	bcf	3970,2,c	;volatile
   843                           
   844                           ;main.c: 29: delay_ms(18.3);
   845  007B14  0E00               	movlw	0
   846  007B16  6E34               	movwf	delay_ms@i+1,c
   847  007B18  0E12               	movlw	18
   848  007B1A  6E33               	movwf	delay_ms@i,c
   849  007B1C  EC60  F03D         	call	_delay_ms	;wreg free
   850  007B20  0638               	decf	returnServo@i,f,c
   851  007B22  A0D8               	btfss	status,0,c
   852  007B24  0639               	decf	returnServo@i+1,f,c
   853  007B26  D7EA               	goto	l1088
   854  007B28                     __end_of_returnServo:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           postinc0	equ	0xFEE
   861                           postdec1	equ	0xFE5
   862                           fsr1l	equ	0xFE1
   863                           indf2	equ	0xFDF
   864                           fsr2h	equ	0xFDA
   865                           fsr2l	equ	0xFD9
   866                           status	equ	0xFD8
   867                           
   868 ;; *************** function _onetone *****************
   869 ;; Defined at:
   870 ;;		line 34 in file "main.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  k               2   14[COMRAM] unsigned int 
   875 ;; Return value:  Size  Location     Type
   876 ;;		None               void
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   884 ;;      Params:         0       0       0       0       0       0       0       0       0
   885 ;;      Locals:         2       0       0       0       0       0       0       0       0
   886 ;;      Temps:          1       0       0       0       0       0       0       0       0
   887 ;;      Totals:         3       0       0       0       0       0       0       0       0
   888 ;;Total ram usage:        3 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    2
   891 ;; This function calls:
   892 ;;		_delay_us
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text3
   899  007B60                     __ptext3:
   900                           	opt stack 0
   901  007B60                     _onetone:
   902                           	opt stack 28
   903                           
   904                           ;main.c: 36: unsigned int k;
   905                           ;main.c: 38: for(k=0;k<100;k++){
   906                           
   907                           ;incstack = 0
   908  007B60  0E00               	movlw	0
   909  007B62  6E42               	movwf	onetone@k+1,c
   910  007B64  0E00               	movlw	0
   911  007B66  6E41               	movwf	onetone@k,c
   912  007B68                     l1102:
   913  007B68  5042               	movf	onetone@k+1,w,c
   914  007B6A  E118               	bnz	l62
   915  007B6C  0E64               	movlw	100
   916  007B6E  5C41               	subwf	onetone@k,w,c
   917  007B70  B0D8               	btfsc	status,0,c
   918  007B72  0012               	return	
   919                           
   920                           ;main.c: 39: delay_us(3000);
   921  007B74  0E0B               	movlw	11
   922  007B76  6E3B               	movwf	delay_us@i+1,c
   923  007B78  0EB8               	movlw	184
   924  007B7A  6E3A               	movwf	delay_us@i,c
   925  007B7C  EC69  F03E         	call	_delay_us	;wreg free
   926                           
   927                           ;main.c: 40: PORTBbits.RB0 = !PORTBbits.RB0;
   928  007B80  B081               	btfsc	3969,0,c	;volatile
   929  007B82  D003               	goto	u560
   930  007B84  6A40               	clrf	??_onetone& (0+255),c
   931  007B86  2A40               	incf	??_onetone& (0+255),f,c
   932  007B88  D001               	goto	u578
   933  007B8A                     u560:
   934  007B8A  6A40               	clrf	??_onetone& (0+255),c
   935  007B8C                     u578:
   936  007B8C  5081               	movf	3969,w,c	;volatile
   937  007B8E  1840               	xorwf	??_onetone,w,c
   938  007B90  0BFE               	andlw	-2
   939  007B92  1840               	xorwf	??_onetone,w,c
   940  007B94  6E81               	movwf	3969,c	;volatile
   941  007B96  4A41               	infsnz	onetone@k,f,c
   942  007B98  2A42               	incf	onetone@k+1,f,c
   943  007B9A  D7E6               	goto	l1102
   944  007B9C                     l62:
   945  007B9C  0012               	return		;funcret
   946  007B9E                     __end_of_onetone:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           postinc0	equ	0xFEE
   953                           postdec1	equ	0xFE5
   954                           fsr1l	equ	0xFE1
   955                           indf2	equ	0xFDF
   956                           fsr2h	equ	0xFDA
   957                           fsr2l	equ	0xFD9
   958                           status	equ	0xFD8
   959                           
   960 ;; *************** function _delay_us *****************
   961 ;; Defined at:
   962 ;;		line 17 in file "delays_utilities.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  i               2    7[COMRAM] unsigned int 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  lower           2   11[COMRAM] unsigned int 
   967 ;;  j               2    9[COMRAM] unsigned int 
   968 ;; Return value:  Size  Location     Type
   969 ;;		None               void
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   977 ;;      Params:         2       0       0       0       0       0       0       0       0
   978 ;;      Locals:         4       0       0       0       0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0
   980 ;;      Totals:         6       0       0       0       0       0       0       0       0
   981 ;;Total ram usage:        6 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    1
   984 ;; This function calls:
   985 ;;		___lwdiv
   986 ;; This function is called by:
   987 ;;		_onetone
   988 ;;		_secondtone
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text4
   994  007CD2                     __ptext4:
   995                           	opt stack 0
   996  007CD2                     _delay_us:
   997                           	opt stack 28
   998                           
   999                           ;delays_utilities.c: 19: unsigned int j,lower;
  1000                           ;delays_utilities.c: 22: lower = i;
  1001                           
  1002                           ;incstack = 0
  1003  007CD2  C03A  F03E         	movff	delay_us@i,delay_us@lower
  1004  007CD6  C03B  F03F         	movff	delay_us@i+1,delay_us@lower+1
  1005                           
  1006                           ;delays_utilities.c: 23: lower = lower/20;
  1007  007CDA  C03E  F033         	movff	delay_us@lower,___lwdiv@dividend
  1008  007CDE  C03F  F034         	movff	delay_us@lower+1,___lwdiv@dividend+1
  1009  007CE2  0E00               	movlw	0
  1010  007CE4  6E36               	movwf	___lwdiv@divisor+1,c
  1011  007CE6  0E14               	movlw	20
  1012  007CE8  6E35               	movwf	___lwdiv@divisor,c
  1013  007CEA  ECCF  F03D         	call	___lwdiv	;wreg free
  1014  007CEE  C033  F03E         	movff	?___lwdiv,delay_us@lower
  1015  007CF2  C034  F03F         	movff	?___lwdiv+1,delay_us@lower+1
  1016                           
  1017                           ;delays_utilities.c: 25: if (i< 5)
  1018  007CF6  503B               	movf	delay_us@i+1,w,c
  1019  007CF8  E104               	bnz	l1058
  1020  007CFA  0E05               	movlw	5
  1021  007CFC  5C3A               	subwf	delay_us@i,w,c
  1022  007CFE  A0D8               	btfss	status,0,c
  1023  007D00  0012               	return	
  1024  007D02                     l1058:
  1025                           
  1026                           ;delays_utilities.c: 29: else
  1027                           ;delays_utilities.c: 30: if(i<10)
  1028  007D02  503B               	movf	delay_us@i+1,w,c
  1029  007D04  E108               	bnz	l1062
  1030  007D06  0E0A               	movlw	10
  1031  007D08  5C3A               	subwf	delay_us@i,w,c
  1032  007D0A  B0D8               	btfsc	status,0,c
  1033  007D0C  D004               	goto	l1062
  1034                           
  1035                           ;delays_utilities.c: 31: {
  1036                           ;delays_utilities.c: 32: _delay((unsigned long)((7)*(48000000/4000000.0)));
  1037  007D0E  0E1C               	movlw	28
  1038  007D10                     u817:
  1039  007D10  2EE8               	decfsz	wreg,f,c
  1040  007D12  D7FE               	goto	u817
  1041                           
  1042                           ;delays_utilities.c: 33: }
  1043  007D14  0012               	return	
  1044  007D16                     l1062:
  1045                           
  1046                           ;delays_utilities.c: 34: else if(i< 20)
  1047  007D16  503B               	movf	delay_us@i+1,w,c
  1048  007D18  E108               	bnz	l1066
  1049  007D1A  0E14               	movlw	20
  1050  007D1C  5C3A               	subwf	delay_us@i,w,c
  1051  007D1E  B0D8               	btfsc	status,0,c
  1052  007D20  D004               	goto	l1066
  1053                           
  1054                           ;delays_utilities.c: 35: {
  1055                           ;delays_utilities.c: 36: _delay((unsigned long)((15)*(48000000/4000000.0)));
  1056  007D22  0E3C               	movlw	60
  1057  007D24                     u827:
  1058  007D24  2EE8               	decfsz	wreg,f,c
  1059  007D26  D7FE               	goto	u827
  1060                           
  1061                           ;delays_utilities.c: 37: }
  1062  007D28  0012               	return	
  1063  007D2A                     l1066:
  1064                           
  1065                           ;delays_utilities.c: 38: else
  1066                           ;delays_utilities.c: 39: for(j=0;j<lower;j++)_delay((unsigned long)((20)*(48000000/40000
      +                          00.0)));
  1067  007D2A  0E00               	movlw	0
  1068  007D2C  6E3D               	movwf	delay_us@j+1,c
  1069  007D2E  0E00               	movlw	0
  1070  007D30  6E3C               	movwf	delay_us@j,c
  1071  007D32  D005               	goto	l19
  1072  007D34                     l1068:
  1073  007D34  0E50               	movlw	80
  1074  007D36                     u837:
  1075  007D36  2EE8               	decfsz	wreg,f,c
  1076  007D38  D7FE               	goto	u837
  1077  007D3A  4A3C               	infsnz	delay_us@j,f,c
  1078  007D3C  2A3D               	incf	delay_us@j+1,f,c
  1079  007D3E                     l19:
  1080  007D3E  503E               	movf	delay_us@lower,w,c
  1081  007D40  5C3C               	subwf	delay_us@j,w,c
  1082  007D42  503F               	movf	delay_us@lower+1,w,c
  1083  007D44  583D               	subwfb	delay_us@j+1,w,c
  1084  007D46  B0D8               	btfsc	status,0,c
  1085  007D48  0012               	return	
  1086  007D4A  D7F4               	goto	l1068
  1087  007D4C                     __end_of_delay_us:
  1088                           	opt stack 0
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           postinc0	equ	0xFEE
  1094                           wreg	equ	0xFE8
  1095                           postdec1	equ	0xFE5
  1096                           fsr1l	equ	0xFE1
  1097                           indf2	equ	0xFDF
  1098                           fsr2h	equ	0xFDA
  1099                           fsr2l	equ	0xFD9
  1100                           status	equ	0xFD8
  1101                           
  1102 ;; *************** function ___lwdiv *****************
  1103 ;; Defined at:
  1104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  dividend        2    0[COMRAM] unsigned int 
  1107 ;;  divisor         2    2[COMRAM] unsigned int 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  quotient        2    4[COMRAM] unsigned int 
  1110 ;;  counter         1    6[COMRAM] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  2    0[COMRAM] unsigned int 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1120 ;;      Params:         4       0       0       0       0       0       0       0       0
  1121 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1123 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1124 ;;Total ram usage:        7 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_delay_us
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text5
  1134  007B9E                     __ptext5:
  1135                           	opt stack 0
  1136  007B9E                     ___lwdiv:
  1137                           	opt stack 28
  1138                           
  1139                           ;incstack = 0
  1140  007B9E  0E00               	movlw	0
  1141  007BA0  6E38               	movwf	___lwdiv@quotient+1,c
  1142  007BA2  0E00               	movlw	0
  1143  007BA4  6E37               	movwf	___lwdiv@quotient,c
  1144  007BA6  5035               	movf	___lwdiv@divisor,w,c
  1145  007BA8  1036               	iorwf	___lwdiv@divisor+1,w,c
  1146  007BAA  B4D8               	btfsc	status,2,c
  1147  007BAC  D01C               	goto	l527
  1148  007BAE  0E01               	movlw	1
  1149  007BB0  6E39               	movwf	___lwdiv@counter,c
  1150  007BB2  D004               	goto	l1026
  1151  007BB4                     l1024:
  1152  007BB4  90D8               	bcf	status,0,c
  1153  007BB6  3635               	rlcf	___lwdiv@divisor,f,c
  1154  007BB8  3636               	rlcf	___lwdiv@divisor+1,f,c
  1155  007BBA  2A39               	incf	___lwdiv@counter,f,c
  1156  007BBC                     l1026:
  1157  007BBC  AE36               	btfss	___lwdiv@divisor+1,7,c
  1158  007BBE  D7FA               	goto	l1024
  1159  007BC0                     l1028:
  1160  007BC0  90D8               	bcf	status,0,c
  1161  007BC2  3637               	rlcf	___lwdiv@quotient,f,c
  1162  007BC4  3638               	rlcf	___lwdiv@quotient+1,f,c
  1163  007BC6  5035               	movf	___lwdiv@divisor,w,c
  1164  007BC8  5C33               	subwf	___lwdiv@dividend,w,c
  1165  007BCA  5036               	movf	___lwdiv@divisor+1,w,c
  1166  007BCC  5834               	subwfb	___lwdiv@dividend+1,w,c
  1167  007BCE  A0D8               	btfss	status,0,c
  1168  007BD0  D005               	goto	l1036
  1169  007BD2  5035               	movf	___lwdiv@divisor,w,c
  1170  007BD4  5E33               	subwf	___lwdiv@dividend,f,c
  1171  007BD6  5036               	movf	___lwdiv@divisor+1,w,c
  1172  007BD8  5A34               	subwfb	___lwdiv@dividend+1,f,c
  1173  007BDA  8037               	bsf	___lwdiv@quotient,0,c
  1174  007BDC                     l1036:
  1175  007BDC  90D8               	bcf	status,0,c
  1176  007BDE  3236               	rrcf	___lwdiv@divisor+1,f,c
  1177  007BE0  3235               	rrcf	___lwdiv@divisor,f,c
  1178  007BE2  2E39               	decfsz	___lwdiv@counter,f,c
  1179  007BE4  D7ED               	goto	l1028
  1180  007BE6                     l527:
  1181  007BE6  C037  F033         	movff	___lwdiv@quotient,?___lwdiv
  1182  007BEA  C038  F034         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1183  007BEE  0012               	return		;funcret
  1184  007BF0                     __end_of___lwdiv:
  1185                           	opt stack 0
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           postdec1	equ	0xFE5
  1193                           fsr1l	equ	0xFE1
  1194                           indf2	equ	0xFDF
  1195                           fsr2h	equ	0xFDA
  1196                           fsr2l	equ	0xFD9
  1197                           status	equ	0xFD8
  1198                           
  1199 ;; *************** function _lcd_write_data *****************
  1200 ;; Defined at:
  1201 ;;		line 43 in file "lcd_utilities.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  data            1    wreg     unsigned char 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  data            1    2[COMRAM] unsigned char 
  1206 ;;  temp1           1    3[COMRAM] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;		None               void
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0
  1217 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1218 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1219 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1220 ;;Total ram usage:        3 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    1
  1223 ;; This function calls:
  1224 ;;		_lcd_strobe
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text6
  1231  007D4C                     __ptext6:
  1232                           	opt stack 0
  1233  007D4C                     _lcd_write_data:
  1234                           	opt stack 29
  1235                           
  1236                           ;incstack = 0
  1237                           ;lcd_write_data@data stored from wreg
  1238  007D4C  6E35               	movwf	lcd_write_data@data,c
  1239                           
  1240                           ;lcd_utilities.c: 45: char temp1;
  1241                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  1242  007D4E  8C83               	bsf	3971,6,c	;volatile
  1243                           
  1244                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  1245  007D50  0E3F               	movlw	63
  1246  007D52  6E34               	movwf	??_lcd_write_data& (0+255),c
  1247  007D54  0E55               	movlw	85
  1248  007D56                     u847:
  1249  007D56  2EE8               	decfsz	wreg,f,c
  1250  007D58  D7FE               	goto	u847
  1251  007D5A  2E34               	decfsz	??_lcd_write_data& (0+255),f,c
  1252  007D5C  D7FC               	goto	u847
  1253  007D5E  F000               	nop	
  1254                           
  1255                           ;lcd_utilities.c: 50: temp1 = data;
  1256  007D60  C035  F036         	movff	lcd_write_data@data,lcd_write_data@temp1
  1257                           
  1258                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  1259  007D64  3836               	swapf	lcd_write_data@temp1,w,c
  1260  007D66  0B0F               	andlw	15
  1261  007D68  6E36               	movwf	lcd_write_data@temp1,c
  1262                           
  1263                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  1264  007D6A  5036               	movf	lcd_write_data@temp1,w,c
  1265  007D6C  0B0F               	andlw	15
  1266  007D6E  6E83               	movwf	3971,c	;volatile
  1267                           
  1268                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  1269  007D70  0E7D               	movlw	125
  1270  007D72  6E34               	movwf	??_lcd_write_data& (0+255),c
  1271  007D74  0EAC               	movlw	172
  1272  007D76                     u857:
  1273  007D76  2EE8               	decfsz	wreg,f,c
  1274  007D78  D7FE               	goto	u857
  1275  007D7A  2E34               	decfsz	??_lcd_write_data& (0+255),f,c
  1276  007D7C  D7FC               	goto	u857
  1277                           
  1278                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  1279  007D7E  8C83               	bsf	3971,6,c	;volatile
  1280                           
  1281                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  1282  007D80  0E7D               	movlw	125
  1283  007D82  6E34               	movwf	??_lcd_write_data& (0+255),c
  1284  007D84  0EAC               	movlw	172
  1285  007D86                     u867:
  1286  007D86  2EE8               	decfsz	wreg,f,c
  1287  007D88  D7FE               	goto	u867
  1288  007D8A  2E34               	decfsz	??_lcd_write_data& (0+255),f,c
  1289  007D8C  D7FC               	goto	u867
  1290                           
  1291                           ;lcd_utilities.c: 57: lcd_strobe();
  1292  007D8E  EC22  F03D         	call	_lcd_strobe	;wreg free
  1293                           
  1294                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  1295  007D92  0E7D               	movlw	125
  1296  007D94  6E34               	movwf	??_lcd_write_data& (0+255),c
  1297  007D96  0EAC               	movlw	172
  1298  007D98                     u877:
  1299  007D98  2EE8               	decfsz	wreg,f,c
  1300  007D9A  D7FE               	goto	u877
  1301  007D9C  2E34               	decfsz	??_lcd_write_data& (0+255),f,c
  1302  007D9E  D7FC               	goto	u877
  1303                           
  1304                           ;lcd_utilities.c: 60: temp1 = data;
  1305  007DA0  C035  F036         	movff	lcd_write_data@data,lcd_write_data@temp1
  1306                           
  1307                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  1308  007DA4  5036               	movf	lcd_write_data@temp1,w,c
  1309  007DA6  0B0F               	andlw	15
  1310  007DA8  6E83               	movwf	3971,c	;volatile
  1311                           
  1312                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  1313  007DAA  0E7D               	movlw	125
  1314  007DAC  6E34               	movwf	??_lcd_write_data& (0+255),c
  1315  007DAE  0EAC               	movlw	172
  1316  007DB0                     u887:
  1317  007DB0  2EE8               	decfsz	wreg,f,c
  1318  007DB2  D7FE               	goto	u887
  1319  007DB4  2E34               	decfsz	??_lcd_write_data& (0+255),f,c
  1320  007DB6  D7FC               	goto	u887
  1321                           
  1322                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  1323  007DB8  8C83               	bsf	3971,6,c	;volatile
  1324                           
  1325                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  1326  007DBA  0E9C               	movlw	156
  1327  007DBC  6E34               	movwf	??_lcd_write_data& (0+255),c
  1328  007DBE  0ED7               	movlw	215
  1329  007DC0                     u897:
  1330  007DC0  2EE8               	decfsz	wreg,f,c
  1331  007DC2  D7FE               	goto	u897
  1332  007DC4  2E34               	decfsz	??_lcd_write_data& (0+255),f,c
  1333  007DC6  D7FC               	goto	u897
  1334  007DC8  F000               	nop	
  1335                           
  1336                           ;lcd_utilities.c: 66: lcd_strobe();
  1337  007DCA  EC22  F03D         	call	_lcd_strobe	;wreg free
  1338                           
  1339                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  1340  007DCE  0E9C               	movlw	156
  1341  007DD0  6E34               	movwf	??_lcd_write_data& (0+255),c
  1342  007DD2  0ED7               	movlw	215
  1343  007DD4                     u907:
  1344  007DD4  2EE8               	decfsz	wreg,f,c
  1345  007DD6  D7FE               	goto	u907
  1346  007DD8  2E34               	decfsz	??_lcd_write_data& (0+255),f,c
  1347  007DDA  D7FC               	goto	u907
  1348  007DDC  F000               	nop	
  1349  007DDE  0012               	return		;funcret
  1350  007DE0                     __end_of_lcd_write_data:
  1351                           	opt stack 0
  1352                           tblptru	equ	0xFF8
  1353                           tblptrh	equ	0xFF7
  1354                           tblptrl	equ	0xFF6
  1355                           tablat	equ	0xFF5
  1356                           postinc0	equ	0xFEE
  1357                           wreg	equ	0xFE8
  1358                           postdec1	equ	0xFE5
  1359                           fsr1l	equ	0xFE1
  1360                           indf2	equ	0xFDF
  1361                           fsr2h	equ	0xFDA
  1362                           fsr2l	equ	0xFD9
  1363                           status	equ	0xFD8
  1364                           
  1365 ;; *************** function _lcd_init *****************
  1366 ;; Defined at:
  1367 ;;		line 83 in file "lcd_utilities.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  i               2    5[COMRAM] int 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;		None               void
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1381 ;;      Params:         0       0       0       0       0       0       0       0       0
  1382 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1383 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1384 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1385 ;;Total ram usage:        3 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    2
  1388 ;; This function calls:
  1389 ;;		_lcd_write_cmd
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text7
  1396  007C60                     __ptext7:
  1397                           	opt stack 0
  1398  007C60                     _lcd_init:
  1399                           	opt stack 28
  1400                           
  1401                           ;lcd_utilities.c: 85: int i;
  1402                           ;lcd_utilities.c: 86: TRISD = 0x00;
  1403                           
  1404                           ;incstack = 0
  1405  007C60  0E00               	movlw	0
  1406  007C62  6E95               	movwf	3989,c	;volatile
  1407                           
  1408                           ;lcd_utilities.c: 87: PORTD = 0x00;
  1409  007C64  0E00               	movlw	0
  1410  007C66  6E83               	movwf	3971,c	;volatile
  1411                           
  1412                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
  1413  007C68  9883               	bcf	3971,4,c	;volatile
  1414                           
  1415                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1416  007C6A  9C83               	bcf	3971,6,c	;volatile
  1417                           
  1418                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1419  007C6C  9A83               	bcf	3971,5,c	;volatile
  1420                           
  1421                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1422  007C6E  0E00               	movlw	0
  1423  007C70  6E39               	movwf	lcd_init@i+1,c
  1424  007C72  0E00               	movlw	0
  1425  007C74  6E38               	movwf	lcd_init@i,c
  1426  007C76                     l906:
  1427  007C76  BE39               	btfsc	lcd_init@i+1,7,c
  1428  007C78  D006               	goto	l910
  1429  007C7A  5039               	movf	lcd_init@i+1,w,c
  1430  007C7C  E10F               	bnz	l914
  1431  007C7E  0E64               	movlw	100
  1432  007C80  5C38               	subwf	lcd_init@i,w,c
  1433  007C82  B0D8               	btfsc	status,0,c
  1434  007C84  D00B               	goto	l914
  1435  007C86                     l910:
  1436                           
  1437                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1438  007C86  0E9C               	movlw	156
  1439  007C88  6E37               	movwf	??_lcd_init& (0+255),c
  1440  007C8A  0ED7               	movlw	215
  1441  007C8C                     u917:
  1442  007C8C  2EE8               	decfsz	wreg,f,c
  1443  007C8E  D7FE               	goto	u917
  1444  007C90  2E37               	decfsz	??_lcd_init& (0+255),f,c
  1445  007C92  D7FC               	goto	u917
  1446  007C94  F000               	nop	
  1447  007C96  4A38               	infsnz	lcd_init@i,f,c
  1448  007C98  2A39               	incf	lcd_init@i+1,f,c
  1449  007C9A  D7ED               	goto	l906
  1450  007C9C                     l914:
  1451                           
  1452                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1453  007C9C  0E33               	movlw	51
  1454  007C9E  ECF8  F03D         	call	_lcd_write_cmd
  1455                           
  1456                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1457  007CA2  0E32               	movlw	50
  1458  007CA4  ECF8  F03D         	call	_lcd_write_cmd
  1459                           
  1460                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1461  007CA8  0E28               	movlw	40
  1462  007CAA  ECF8  F03D         	call	_lcd_write_cmd
  1463                           
  1464                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1465  007CAE  0E0E               	movlw	14
  1466  007CB0  ECF8  F03D         	call	_lcd_write_cmd
  1467                           
  1468                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1469  007CB4  0E06               	movlw	6
  1470  007CB6  ECF8  F03D         	call	_lcd_write_cmd
  1471                           
  1472                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1473  007CBA  0E01               	movlw	1
  1474  007CBC  ECF8  F03D         	call	_lcd_write_cmd
  1475                           
  1476                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1477  007CC0  0E9C               	movlw	156
  1478  007CC2  6E37               	movwf	??_lcd_init& (0+255),c
  1479  007CC4  0ED7               	movlw	215
  1480  007CC6                     u927:
  1481  007CC6  2EE8               	decfsz	wreg,f,c
  1482  007CC8  D7FE               	goto	u927
  1483  007CCA  2E37               	decfsz	??_lcd_init& (0+255),f,c
  1484  007CCC  D7FC               	goto	u927
  1485  007CCE  F000               	nop	
  1486  007CD0  0012               	return		;funcret
  1487  007CD2                     __end_of_lcd_init:
  1488                           	opt stack 0
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           postinc0	equ	0xFEE
  1494                           wreg	equ	0xFE8
  1495                           postdec1	equ	0xFE5
  1496                           fsr1l	equ	0xFE1
  1497                           indf2	equ	0xFDF
  1498                           fsr2h	equ	0xFDA
  1499                           fsr2l	equ	0xFD9
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function _lcd_write_cmd *****************
  1503 ;; Defined at:
  1504 ;;		line 18 in file "lcd_utilities.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  cmd             1    wreg     unsigned char 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  cmd             1    2[COMRAM] unsigned char 
  1509 ;;  temp2           1    3[COMRAM] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;		None               void
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0
  1520 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1521 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1522 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1523 ;;Total ram usage:        3 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    1
  1526 ;; This function calls:
  1527 ;;		_lcd_strobe
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;;		_lcd_init
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text8
  1535  007BF0                     __ptext8:
  1536                           	opt stack 0
  1537  007BF0                     _lcd_write_cmd:
  1538                           	opt stack 29
  1539                           
  1540                           ;incstack = 0
  1541                           ;lcd_write_cmd@cmd stored from wreg
  1542  007BF0  6E35               	movwf	lcd_write_cmd@cmd,c
  1543                           
  1544                           ;lcd_utilities.c: 20: unsigned char temp2;
  1545                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  1546  007BF2  9C83               	bcf	3971,6,c	;volatile
  1547                           
  1548                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  1549  007BF4  0E3F               	movlw	63
  1550  007BF6  6E34               	movwf	??_lcd_write_cmd& (0+255),c
  1551  007BF8  0E55               	movlw	85
  1552  007BFA                     u937:
  1553  007BFA  2EE8               	decfsz	wreg,f,c
  1554  007BFC  D7FE               	goto	u937
  1555  007BFE  2E34               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1556  007C00  D7FC               	goto	u937
  1557  007C02  F000               	nop	
  1558                           
  1559                           ;lcd_utilities.c: 23: temp2 = cmd;
  1560  007C04  C035  F036         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  1561                           
  1562                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  1563  007C08  3836               	swapf	lcd_write_cmd@temp2,w,c
  1564  007C0A  0B0F               	andlw	15
  1565  007C0C  6E36               	movwf	lcd_write_cmd@temp2,c
  1566                           
  1567                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  1568  007C0E  5036               	movf	lcd_write_cmd@temp2,w,c
  1569  007C10  0B0F               	andlw	15
  1570  007C12  6E83               	movwf	3971,c	;volatile
  1571                           
  1572                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  1573  007C14  0E7D               	movlw	125
  1574  007C16  6E34               	movwf	??_lcd_write_cmd& (0+255),c
  1575  007C18  0EAC               	movlw	172
  1576  007C1A                     u947:
  1577  007C1A  2EE8               	decfsz	wreg,f,c
  1578  007C1C  D7FE               	goto	u947
  1579  007C1E  2E34               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1580  007C20  D7FC               	goto	u947
  1581                           
  1582                           ;lcd_utilities.c: 28: lcd_strobe();
  1583  007C22  EC22  F03D         	call	_lcd_strobe	;wreg free
  1584                           
  1585                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  1586  007C26  0E7D               	movlw	125
  1587  007C28  6E34               	movwf	??_lcd_write_cmd& (0+255),c
  1588  007C2A  0EAC               	movlw	172
  1589  007C2C                     u957:
  1590  007C2C  2EE8               	decfsz	wreg,f,c
  1591  007C2E  D7FE               	goto	u957
  1592  007C30  2E34               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1593  007C32  D7FC               	goto	u957
  1594                           
  1595                           ;lcd_utilities.c: 32: temp2 = cmd;
  1596  007C34  C035  F036         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  1597                           
  1598                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  1599  007C38  5036               	movf	lcd_write_cmd@temp2,w,c
  1600  007C3A  0B0F               	andlw	15
  1601  007C3C  6E83               	movwf	3971,c	;volatile
  1602                           
  1603                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  1604  007C3E  0E7D               	movlw	125
  1605  007C40  6E34               	movwf	??_lcd_write_cmd& (0+255),c
  1606  007C42  0EAC               	movlw	172
  1607  007C44                     u967:
  1608  007C44  2EE8               	decfsz	wreg,f,c
  1609  007C46  D7FE               	goto	u967
  1610  007C48  2E34               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1611  007C4A  D7FC               	goto	u967
  1612                           
  1613                           ;lcd_utilities.c: 36: lcd_strobe();
  1614  007C4C  EC22  F03D         	call	_lcd_strobe	;wreg free
  1615                           
  1616                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  1617  007C50  0E7D               	movlw	125
  1618  007C52  6E34               	movwf	??_lcd_write_cmd& (0+255),c
  1619  007C54  0EAC               	movlw	172
  1620  007C56                     u977:
  1621  007C56  2EE8               	decfsz	wreg,f,c
  1622  007C58  D7FE               	goto	u977
  1623  007C5A  2E34               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1624  007C5C  D7FC               	goto	u977
  1625  007C5E  0012               	return		;funcret
  1626  007C60                     __end_of_lcd_write_cmd:
  1627                           	opt stack 0
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           postinc0	equ	0xFEE
  1633                           wreg	equ	0xFE8
  1634                           postdec1	equ	0xFE5
  1635                           fsr1l	equ	0xFE1
  1636                           indf2	equ	0xFDF
  1637                           fsr2h	equ	0xFDA
  1638                           fsr2l	equ	0xFD9
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _lcd_strobe *****************
  1642 ;; Defined at:
  1643 ;;		line 73 in file "lcd_utilities.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;		None               void
  1650 ;; Registers used:
  1651 ;;		wreg
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1657 ;;      Params:         0       0       0       0       0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1659 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1660 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1661 ;;Total ram usage:        1 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_lcd_write_cmd
  1667 ;;		_lcd_write_data
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text9
  1672  007A44                     __ptext9:
  1673                           	opt stack 0
  1674  007A44                     _lcd_strobe:
  1675                           	opt stack 29
  1676                           
  1677                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  1678                           
  1679                           ;incstack = 0
  1680  007A44  8883               	bsf	3971,4,c	;volatile
  1681                           
  1682                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  1683  007A46  0E7D               	movlw	125
  1684  007A48  6E33               	movwf	??_lcd_strobe& (0+255),c
  1685  007A4A  0EAC               	movlw	172
  1686  007A4C                     u987:
  1687  007A4C  2EE8               	decfsz	wreg,f,c
  1688  007A4E  D7FE               	goto	u987
  1689  007A50  2E33               	decfsz	??_lcd_strobe& (0+255),f,c
  1690  007A52  D7FC               	goto	u987
  1691                           
  1692                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  1693  007A54  9883               	bcf	3971,4,c	;volatile
  1694                           
  1695                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  1696  007A56  0E7D               	movlw	125
  1697  007A58  6E33               	movwf	??_lcd_strobe& (0+255),c
  1698  007A5A  0EAC               	movlw	172
  1699  007A5C                     u997:
  1700  007A5C  2EE8               	decfsz	wreg,f,c
  1701  007A5E  D7FE               	goto	u997
  1702  007A60  2E33               	decfsz	??_lcd_strobe& (0+255),f,c
  1703  007A62  D7FC               	goto	u997
  1704  007A64  0012               	return		;funcret
  1705  007A66                     __end_of_lcd_strobe:
  1706                           	opt stack 0
  1707                           tblptru	equ	0xFF8
  1708                           tblptrh	equ	0xFF7
  1709                           tblptrl	equ	0xFF6
  1710                           tablat	equ	0xFF5
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           indf2	equ	0xFDF
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _Rotation180 *****************
  1721 ;; Defined at:
  1722 ;;		line 13 in file "main.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  i               2    5[COMRAM] unsigned int 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0
  1737 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1739 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1740 ;;Total ram usage:        2 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    1
  1743 ;; This function calls:
  1744 ;;		_delay_ms
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text10
  1751  007B28                     __ptext10:
  1752                           	opt stack 0
  1753  007B28                     _Rotation180:
  1754                           	opt stack 29
  1755                           
  1756                           ;main.c: 14: unsigned int i;
  1757                           ;main.c: 15: for(i=0;i<12;i++){
  1758                           
  1759                           ;incstack = 0
  1760  007B28  0E00               	movlw	0
  1761  007B2A  6E39               	movwf	Rotation180@i+1,c
  1762  007B2C  0E00               	movlw	0
  1763  007B2E  6E38               	movwf	Rotation180@i,c
  1764  007B30                     l1074:
  1765  007B30  5039               	movf	Rotation180@i+1,w,c
  1766  007B32  E115               	bnz	l52
  1767  007B34  0E0C               	movlw	12
  1768  007B36  5C38               	subwf	Rotation180@i,w,c
  1769  007B38  B0D8               	btfsc	status,0,c
  1770  007B3A  0012               	return	
  1771                           
  1772                           ;main.c: 16: PORTCbits.RC2 =1;
  1773  007B3C  8482               	bsf	3970,2,c	;volatile
  1774                           
  1775                           ;main.c: 17: delay_ms(1.25);
  1776  007B3E  0E00               	movlw	0
  1777  007B40  6E34               	movwf	delay_ms@i+1,c
  1778  007B42  0E01               	movlw	1
  1779  007B44  6E33               	movwf	delay_ms@i,c
  1780  007B46  EC60  F03D         	call	_delay_ms	;wreg free
  1781                           
  1782                           ;main.c: 18: PORTCbits.RC2=0;
  1783  007B4A  9482               	bcf	3970,2,c	;volatile
  1784                           
  1785                           ;main.c: 19: delay_ms(18.3);
  1786  007B4C  0E00               	movlw	0
  1787  007B4E  6E34               	movwf	delay_ms@i+1,c
  1788  007B50  0E12               	movlw	18
  1789  007B52  6E33               	movwf	delay_ms@i,c
  1790  007B54  EC60  F03D         	call	_delay_ms	;wreg free
  1791  007B58  4A38               	infsnz	Rotation180@i,f,c
  1792  007B5A  2A39               	incf	Rotation180@i+1,f,c
  1793  007B5C  D7E9               	goto	l1074
  1794  007B5E                     l52:
  1795  007B5E  0012               	return		;funcret
  1796  007B60                     __end_of_Rotation180:
  1797                           	opt stack 0
  1798                           tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           fsr1l	equ	0xFE1
  1806                           indf2	equ	0xFDF
  1807                           fsr2h	equ	0xFDA
  1808                           fsr2l	equ	0xFD9
  1809                           status	equ	0xFD8
  1810                           
  1811 ;; *************** function _delay_ms *****************
  1812 ;; Defined at:
  1813 ;;		line 10 in file "delays_utilities.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  i               2    0[COMRAM] unsigned int 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  j               2    3[COMRAM] unsigned int 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;		None               void
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1827 ;;      Params:         2       0       0       0       0       0       0       0       0
  1828 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1829 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1830 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1831 ;;Total ram usage:        5 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_Rotation180
  1837 ;;		_returnServo
  1838 ;;		_secondtone
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text11
  1844  007AC0                     __ptext11:
  1845                           	opt stack 0
  1846  007AC0                     _delay_ms:
  1847                           	opt stack 29
  1848                           
  1849                           ;delays_utilities.c: 12: if(i!=0)
  1850                           
  1851                           ;incstack = 0
  1852  007AC0  5033               	movf	delay_ms@i,w,c
  1853  007AC2  1034               	iorwf	delay_ms@i+1,w,c
  1854  007AC4  B4D8               	btfsc	status,2,c
  1855  007AC6  0012               	return	
  1856                           
  1857                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  1858  007AC8  0E00               	movlw	0
  1859  007ACA  6E37               	movwf	delay_ms@j+1,c
  1860  007ACC  0E00               	movlw	0
  1861  007ACE  6E36               	movwf	delay_ms@j,c
  1862  007AD0  D00A               	goto	l6
  1863  007AD2                     l1044:
  1864  007AD2  0E10               	movlw	16
  1865  007AD4  6E35               	movwf	??_delay_ms& (0+255),c
  1866  007AD6  0E94               	movlw	148
  1867  007AD8                     u1007:
  1868  007AD8  2EE8               	decfsz	wreg,f,c
  1869  007ADA  D7FE               	goto	u1007
  1870  007ADC  2E35               	decfsz	??_delay_ms& (0+255),f,c
  1871  007ADE  D7FC               	goto	u1007
  1872  007AE0  D000               	nop2	
  1873  007AE2  4A36               	infsnz	delay_ms@j,f,c
  1874  007AE4  2A37               	incf	delay_ms@j+1,f,c
  1875  007AE6                     l6:
  1876  007AE6  5033               	movf	delay_ms@i,w,c
  1877  007AE8  5C36               	subwf	delay_ms@j,w,c
  1878  007AEA  5034               	movf	delay_ms@i+1,w,c
  1879  007AEC  5837               	subwfb	delay_ms@j+1,w,c
  1880  007AEE  B0D8               	btfsc	status,0,c
  1881  007AF0  0012               	return	
  1882  007AF2  D7EF               	goto	l1044
  1883  007AF4                     __end_of_delay_ms:
  1884                           	opt stack 0
  1885  0000                     tblptru	equ	0xFF8
  1886                           tblptrh	equ	0xFF7
  1887                           tblptrl	equ	0xFF6
  1888                           tablat	equ	0xFF5
  1889                           postinc0	equ	0xFEE
  1890                           wreg	equ	0xFE8
  1891                           postdec1	equ	0xFE5
  1892                           fsr1l	equ	0xFE1
  1893                           indf2	equ	0xFDF
  1894                           fsr2h	equ	0xFDA
  1895                           fsr2l	equ	0xFD9
  1896                           status	equ	0xFD8
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           postinc0	equ	0xFEE
  1902                           wreg	equ	0xFE8
  1903                           postdec1	equ	0xFE5
  1904                           fsr1l	equ	0xFE1
  1905                           indf2	equ	0xFDF
  1906                           fsr2h	equ	0xFDA
  1907                           fsr2l	equ	0xFD9
  1908                           status	equ	0xFD8
  1909                           
  1910                           	psect	rparam
  1911  0000                     tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           postdec1	equ	0xFE5
  1918                           fsr1l	equ	0xFE1
  1919                           indf2	equ	0xFDF
  1920                           fsr2h	equ	0xFDA
  1921                           fsr2l	equ	0xFD9
  1922                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        50
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      71
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_onetone
    _main->_secondtone
    _secondtone->_delay_us
    _returnServo->_delay_ms
    _onetone->_delay_us
    _delay_us->___lwdiv
    _lcd_write_data->_lcd_strobe
    _lcd_init->_lcd_write_cmd
    _lcd_write_cmd->_lcd_strobe
    _Rotation180->_delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4074
                                             16 COMRAM     4     4      0
                        _Rotation180
                           _delay_ms
                           _delay_us
                           _lcd_init
                      _lcd_write_cmd
                     _lcd_write_data
                            _onetone
                        _returnServo
                         _secondtone
 ---------------------------------------------------------------------------------
 (1) _secondtone                                           3     3      0    1128
                                             13 COMRAM     3     3      0
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _returnServo                                          2     2      0     415
                                              5 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _onetone                                              3     3      0     667
                                             13 COMRAM     3     3      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             6     4      2     621
                                              7 COMRAM     6     4      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     248
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_write_data                                       3     3      0      75
                                              1 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     105
                                              4 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_write_cmd                                        3     3      0      75
                                              1 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_strobe                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Rotation180                                          2     2      0     415
                                              5 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     369
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Rotation180
     _delay_ms
   _delay_ms
   _delay_us
     ___lwdiv
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _lcd_write_cmd
     _lcd_strobe
   _lcd_write_data
     _lcd_strobe
   _onetone
     _delay_us
       ___lwdiv
   _returnServo
     _delay_ms
   _secondtone
     _delay_ms
     _delay_us
       ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      47       1       74.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      20        0.0%
DATA                 0      0      47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Aug 19 13:37:06 2021

                      l6 7AE6             returnServo@i 0038                       l19 7D3E  
                     l52 7B5E                       l62 7B9C                       l70 7EBE  
                     l66 7E22                       l82 7F8C                       l83 7EDA  
                     l68 7E70                       l92 7FF8                       l93 7F92  
                     l95 7FF2                       l96 7FF4                       l88 7F88  
           Rotation180@i 0038                      l527 7BE6                      l910 7C86  
                    l914 7C9C                      l906 7C76                      u600 7E0C  
                    u700 7EBE                      u620 7E22                      u560 7B8A  
                    u640 7E5A                      u618 7E0E                      u660 7E70  
                    u680 7EA8                      u817 7D10                      u578 7B8C  
                    u658 7E5C                      u907 7DD4                      u827 7D24  
                    u780 7FF2                      u917 7C8C                      u837 7D36  
                    u927 7CC6                      u847 7D56                      u937 7BFA  
                    u857 7D76                      u698 7EAA                      u947 7C1A  
                    u867 7D86                      u957 7C2C                      u877 7D98  
                    u967 7C44                      u887 7DB0                      u977 7C56  
                    u897 7DC0                      u987 7A4C                      u997 7A5C  
                    wreg 000FE8                     l1102 7B68                     l1024 7BB4  
                   l1200 7F56                     l1026 7BBC                     l1044 7AD2  
                   l1036 7BDC                     l1028 7BC0                     l1220 7FCE  
                   l1062 7D16                     l1208 7F72                     l1074 7B30  
                   l1066 7D2A                     l1058 7D02                     l1068 7D34  
                   l1180 7EF6                     l1088 7AFC                     l1192 7F22  
                   l1184 7F06                     l1196 7F46                     u1007 7AD8  
 __end_of_lcd_write_data 7DE0                     _main 7EC2                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9           ?_lcd_write_cmd 0033  
                   start 1000             ___param_bank 000010                    ?_main 0033  
        __end_of___lwdiv 7BF0                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISC 000F94                    _TRISD 000F95         lcd_write_cmd@cmd 0035  
                  main@i 0045                    main@j 0043          __end_of_onetone 7B9E  
                  tablat 000FF5          ?_lcd_write_data 0033                    status 000FD8  
        __initialization 7A66             __end_of_main 8000                   ??_main 0043  
          __activetblptr 000000                   _ADCON1 000FC1          ??_lcd_write_cmd 0034  
       __end_of_delay_ms 7AF4         __end_of_delay_us 7D4C         __end_of_lcd_init 7CD2  
              ??___lwdiv 0037             __pdataCOMRAM 0001                   tblptrh 000FF7  
              ??_onetone 0040                   tblptrl 000FF6                   tblptru 000FF8  
           ?_returnServo 0033               __accesstop 0060  __end_of__initialization 7A88  
          ___rparam_used 000001            ??_Rotation180 0038           __pcstackCOMRAM 0033  
    __end_of_Rotation180 7B60                ?_delay_ms 0033                ?_delay_us 003A  
            secondtone@k 0041         ??_lcd_write_data 0034               _lcd_strobe 7A44  
              ?_lcd_init 0033       lcd_write_data@data 0035       lcd_write_cmd@temp2 0036  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 7B9E  
                __pcinit 7A66                  __ramtop 0800                  __ptext0 7EC2  
                __ptext1 7DE0                  __ptext2 7AF4                  __ptext3 7B60  
                __ptext4 7CD2                  __ptext5 7B9E                  __ptext6 7D4C  
                __ptext7 7C60                  __ptext8 7BF0                  __ptext9 7A44  
             ??_delay_ms 0035               ??_delay_us 003C                  _onetone 7B60  
                _outchar 0047               ??_lcd_init 0037     end_of_initialization 7A88  
   __size_of_returnServo 0034               _secondtone 7DE0              _Rotation180 7B28  
                postdec1 000FE5                  postinc0 000FEE                _PORTAbits 000F80  
              _PORTBbits 000F81                _PORTCbits 000F82                _PORTDbits 000F83  
              _TRISBbits 000F93                _TRISCbits 000F94              ?_lcd_strobe 0033  
  __end_of_lcd_write_cmd 7C60            __pidataCOMRAM 7A8E      start_initialization 7A66  
          delay_us@lower 003E              ?_secondtone 0033      __size_of_lcd_strobe 0022  
            __pbssCOMRAM 0047        __size_of_delay_ms 0034        __size_of_delay_us 007A  
      __size_of_lcd_init 0072         ___lwdiv@dividend 0033                 ?___lwdiv 0033  
    __size_of_secondtone 00E2                 ?_onetone 0033         ___lwdiv@quotient 0037  
              delay_ms@i 0033                delay_ms@j 0036                delay_us@i 003A  
              delay_us@j 003C             ?_Rotation180 0033                lcd_init@i 0038  
          ??_returnServo 0038      lcd_write_data@temp1 0036             ??_lcd_strobe 0033  
              copy_data0 7A7C                 _MessageD 0014                 _MessageP 0001  
               _MessageR 0026  __size_of_lcd_write_data 0094                 __Hrparam 0000  
               __Lrparam 0000         __size_of___lwdiv 0052       __end_of_lcd_strobe 7A66  
               _delay_ms 7AC0                 _delay_us 7CD2          ___lwdiv@divisor 0035  
        ___lwdiv@counter 0039                 __ptext10 7B28                 __ptext11 7AC0  
       __size_of_onetone 003E                 _lcd_init 7C60             ??_secondtone 0040  
    __end_of_returnServo 7B28            __size_of_main 013E       __end_of_secondtone 7EC2  
 __size_of_lcd_write_cmd 0070                 onetone@k 0041     __size_of_Rotation180 0038  
            _returnServo 7AF4           _lcd_write_data 7D4C            _lcd_write_cmd 7BF0  
